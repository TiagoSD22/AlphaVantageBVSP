# Descrição:
# Docker-compose para controle e gerenciamento dos containers da aplicação
# @Maintainer: Tiago Siqueira Dionizio <tiagosdionizio@gmail.com>

version: '2'

# Definição dos serviços para aplicação
services:
  angular.client: # container do cliente em Angular
    build: Front-end/. # local do Dockerfile para imagem do cliente Angular
    ports:
      # redirecionando a porta em que o Angular está rodando no container (4200) 
      # para a porta 4200 da máquina executando a aplicação
      - "4200:4200" 
    volumes:
      # redirecionando diretório do app do container para permitir live reload da página ao se alterar o código fonte
      - ./Front-end:/app 
  
  python.server: # container do servidor em python
    build: Back-end/. # local do Dockerfile para imagem do servidor python
    ports:
      # redirecionando a porta da API sendo executada no container(5000)
      # para a porta 5000 da máquina executando a aplicação 
      - "5000:5000" 
    links:
      # adicionando o container do banco de dados como dependência do container servidor
      # para que a aplicação possa fazer a persistência e acesso dos dados
      - database

  database: #container de banco de dados da aplicação
      image: postgres:10 #utilizando imagem do dockerHub para postgreSQL10
      environment: #configurações do Database da aplicação
        - POSTGRES_USER=desafiopontotel
        - POSTGRES_PASSWORD=alphavantage
        - POSTGRES_DB=alphavantage
      ports:
        # redirecionando a porta do cliente postgres do container (5432)
        # para a porta 5432 da máquina executando a aplicação
        - "5432:5432" 
      volumes:
        - ./pgdata:/var/lib/postgresql/data # configurando diretório local para armazenar dados do banco da aplicação